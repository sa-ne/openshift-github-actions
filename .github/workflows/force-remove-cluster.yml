name: force-remove-cluster

on:
  workflow_dispatch:
    inputs:
      clusterName:
        description: 'Short name of cluster INCLUDING unquie id (i.e. ocp-test-01-a4j8a')
        required: true
      aws_region:
        description: 'region in aws'
        required: true
      s3_storage:
        description: 'AWS S3 storage bucket name (i.e. ocp-s3-storage)'
        required: true

jobs:
  force-remove-openshift-cluster:
    runs-on: macos-latest
    env:
      temp_dir: "temp-${{ github.run_number }}"
    steps:
      - name: "Checkout ${{ github.ref }}"
        uses: actions/checkout@master
        with:
          ref: ${{ github.ref }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.aws_region }}

      - name: Download OpenShift installer and update permissions
        shell: bash
        env:
          s3_installer_path: "${{ github.event.inputs.s3_storage }}/macos-installer"
        run: |
          mkdir -p ./${{ env.temp_dir }}
          echo "Downloading OpenShift Installer..."
          aws s3 cp s3://${{ env.s3_installer_path }}/openshift-install ./openshift-install --region ${{ github.event.inputs.aws_region }} --quiet
          echo "Update permissions to executable on the openshift-installer..."
          chmod +rwx ./openshift-install

      - name: Create force retire metadata
        shell: bash
        run: |
          mkdir -p ./${{ env.temp_dir }}
          mkdir -p ./${{ env.temp_dir }}/${{ github.event.inputs.clusterName }}
          export ID=${RANDOM:0:10000}
          export aws_region="${{ github.event.inputs.aws_region }}"
          export clusterName="${{ github.event.inputs.clusterName }}"
          envsubst < ./destroy-configs/metadata.json > ./${{ env.temp_dir }}/${{ github.event.inputs.clusterName }}/metadata.json

      - name: Destroy cluster
        shell: bash
        run: |
          ./openshift-install destroy cluster --dir=./${{ env.temp_dir }}/${{ github.event.inputs.clusterName }}

